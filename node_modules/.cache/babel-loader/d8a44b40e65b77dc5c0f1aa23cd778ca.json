{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onBeforeMount } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport Films from '@/components/Films.vue';\nexport default {\n  __name: 'PersonView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    document.title = \"Starwars: Personajes: \" + route.path.replaceAll(\"%20\", \" \").replace(\"/people/\", \"\");\n    if (store.getters.countPeople == 0) {\n      router.push({\n        name: 'people'\n      }); //si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url específica de nave)\n    }\n\n    let isShipLoaded = ref(false);\n    const name = ref(route.params.name);\n    const dataObj = store.state.people.find(item => item.name == name.value);\n    const objEntries = ref([]);\n    Object.entries(dataObj).forEach(item => {\n      if (item[0] != 'name' && item[0] != 'species' && item[0] != 'starships' && item[0] != 'films' && item[0] != 'homeworld' && item[0] != 'vehicles' && item[0] != 'created' && item[0] != 'edited' && item[0] != 'url') {\n        let name = item[0].charAt(0).toUpperCase() + item[0].slice(1).replaceAll(\"_\", \" \");\n        let value = item[1].charAt(0).toUpperCase() + item[1].slice(1);\n        objEntries.value.push([name, value]);\n      }\n    });\n    const films = dataObj.films;\n    const navesUrls = dataObj.starships;\n    const navesData = ref([]);\n    onBeforeMount(() => {\n      if (navesUrls.length > 0) {\n        navesUrls.forEach(url => {\n          if (store.getters.countShips > 0 && store.state.ships.some(item => item.url == url)) {\n            let naveFound = store.state.ships.find(item => item.url == url);\n            navesData.value.push({\n              name: naveFound.name,\n              model: naveFound.model\n            });\n            isShipLoaded.value = true;\n          } else {\n            const request = fetch(url);\n            request.then(response => {\n              if (!response.ok) {\n                throw response.status;\n              } else {\n                return response.json();\n              }\n            }).then(json => {\n              navesData.value.push({\n                name: json.name,\n                model: json.model\n              });\n            }).catch(error => {\n              console.log('Ocurrió un error: ', error);\n            });\n          }\n        });\n      }\n    });\n    const __returned__ = {\n      route,\n      router,\n      store,\n      isShipLoaded,\n      name,\n      dataObj,\n      objEntries,\n      films,\n      navesUrls,\n      navesData,\n      ref,\n      onBeforeMount,\n      useRoute,\n      useRouter,\n      useStore,\n      Films\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","onBeforeMount","useRoute","useRouter","useStore","Films","route","router","store","document","title","path","replaceAll","replace","getters","countPeople","push","name","isShipLoaded","params","dataObj","state","people","find","item","value","objEntries","Object","entries","forEach","charAt","toUpperCase","slice","films","navesUrls","starships","navesData","length","url","countShips","ships","some","naveFound","model","request","fetch","then","response","ok","status","json","catch","error","console","log"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/views/PersonView.vue"],"sourcesContent":["<script setup>\nimport { ref, onBeforeMount } from 'vue'\nimport { useRoute,useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport Films from '@/components/Films.vue'\n\nconst route = useRoute()\nconst router=useRouter()\nconst store = useStore()\n\ndocument.title=\"Starwars: Personajes: \"+route.path.replaceAll(\"%20\", \" \").replace(\"/people/\", \"\");\n\nif (store.getters.countPeople==0){\n  router.push({name:'people'});//si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url específica de nave)\n}\n\nlet isShipLoaded=ref(false);\n\nconst name=ref(route.params.name);\nconst dataObj=store.state.people.find(item=>item.name==name.value)\nconst objEntries=ref([]);\n\nObject.entries(dataObj).forEach((item)=>{\n  if (item[0]!='name' && item[0]!='species' && item[0]!='starships' && item[0]!='films' && item[0]!='homeworld' && item[0]!='vehicles' && item[0]!='created' && item[0]!='edited' && item[0]!='url'){\n  let name=item[0].charAt(0).toUpperCase() + item[0].slice(1).replaceAll(\"_\", \" \");\n  let value=item[1].charAt(0).toUpperCase() + item[1].slice(1);\n  objEntries.value.push([name, value]);\n  }\n})\n\nconst films=dataObj.films;\n\nconst navesUrls=dataObj.starships;\nconst navesData=ref([]);\n\n\n\nonBeforeMount(()=>{\n  if (navesUrls.length>0){\nnavesUrls.forEach (url=> {\n  if (store.getters.countShips>0 && store.state.ships.some(item=>item.url==url)){\n    let naveFound=store.state.ships.find(item=>item.url==url);\n    navesData.value.push({name: naveFound.name, model:naveFound.model});\n    isShipLoaded.value=true;\n  } else{\n    const request = fetch(url);\n    request.then( response => {\n              if (!response.ok) {\n                throw response.status\n             \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              navesData.value.push({name: json.name, model:json.model});\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n            });\n  }\n  \n})\n}\n})\n\n</script>\n<template>\n    <h3>Personajes: {{name}} //</h3>\n    <div class=\"item-container\">\n      <h4>Detalle</h4>\n      <ul>\n        <li v-for=\"(entry, index) in objEntries\" :key=\"index\">\n        <span class=\"item-property\">{{entry[0]}}:</span> <span class=\"item-value\">{{entry[1]}}</span>\n      </li>\n      </ul>\n        <div v-if=\"films.length>0\">\n          <h4>Films</h4>\n          <ul >\n            <li v-for=\"(url, index) in films\" :key=\"index\" class=\"sublistado-item\"><Films :url=\"url\" /></li>\n          </ul>\n        </div>\n        <div v-if=\"navesUrls.length>0\">\n          <h4>Naves</h4>\n          <div v-if=\"isShipLoaded\">\n            <ul>\n              <li v-for=\"(item, index) in navesData\" :key=\"index\" class=\"sublistado-item\"><router-link :to=\"{name:'nave', params: {name:item.name}}\"><span class=\"ship-name\">{{item.name}}</span> ({{item.model}})</router-link></li>\n            </ul>\n          </div>\n          <div v-else>\n            <ul>\n              <li v-for=\"(item, index) in navesData\" :key=\"index\" class=\"sublistado-item\"><span class=\"ship-name\">{{item.name}}</span> ({{item.model}})</li>\n            </ul>\n          </div>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n.item-container{\n  background-color: #1c1b1b;\n  width: 50%;\n  padding: 1.5rem;\n  margin: 1rem auto;\n  text-align: left;\n}\n.item-property{\n  font-weight: bold;\n}\nul{\n  margin-top:0;\n}\nli::marker {\n\tcolor: #f9d81cda;\n}\nh3{\n  color: #f9d81cda;\n}\nh4{\n  margin-bottom: 0.4rem;\n  font-style: italic;\n  color: #f9d81cda;\n  border-bottom: #f9d81cda;\n}\n.ship-name{\n  font-weight: bold;\n}\n.sublistado-item{\n  margin-bottom: 0.5rem;\n}\na {\n  color: #a8a3a3;\n  margin-top: 1rem;\n} \na:hover{\n  color: #f9d81cda;\n  text-decoration: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}