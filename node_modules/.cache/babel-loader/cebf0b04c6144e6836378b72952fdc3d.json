{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onBeforeMount } from 'vue';\nexport default {\n  __name: 'Pilotos',\n  props: {\n    url: {\n      type: String\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const objFile = ref({\n      name: null,\n      height: null,\n      mass: null,\n      hair_color: null,\n      skin_color: null,\n      eye_color: null,\n      birth_year: null,\n      gender: null,\n      films: [],\n      starships: []\n    });\n    const films = ref([]);\n    const getFilm = url => {\n      const request = fetch(url);\n      request.then(response => {\n        if (!response.ok) {\n          throw response.status;\n        } else {\n          return response.json();\n        }\n      }).then(json => {\n        films.value.push(json.title);\n      }).catch(error => {\n        console.log('Ocurri贸 un error: ', error);\n      });\n    };\n    const getFile = url => {\n      const request = fetch(url);\n      request.then(response => {\n        if (!response.ok) {\n          throw response.status;\n        } else {\n          return response.json();\n        }\n      }).then(json => {\n        objFile.value = {\n          ...json\n        };\n        json.films.forEach(url => {\n          getFilm(url);\n        });\n      }).catch(error => {\n        console.log('Ocurri贸 un error: ', error);\n      });\n    };\n    onBeforeMount(() => {\n      getFile(props.url);\n    });\n    const __returned__ = {\n      props,\n      objFile,\n      films,\n      getFilm,\n      getFile,\n      ref,\n      onBeforeMount\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AACA,SAASA,GAAG,EAAEC,aAAa,QAAQ,KAAK;;;;;;;;;;;;;IAMxC,MAAMC,OAAO,GAACF,GAAG,CAAC;MAChBG,IAAI,EAAE,IAAI;MACVC,MAAM,EAAE,IAAI;MACZC,IAAI,EAAE,IAAI;MACVC,UAAU,EAAE,IAAI;MAChBC,UAAU,EAAE,IAAI;MAChBC,SAAS,EAAE,IAAI;MACfC,UAAU,EAAE,IAAI;MAChBC,MAAM,EAAE,IAAI;MACZC,KAAK,EAAE,EAAE;MACTC,SAAS,EAAC;IACZ,CAAC,CAAC;IACF,MAAMD,KAAK,GAACX,GAAG,CAAC,EAAE,CAAC;IAEnB,MAAMa,OAAO,GAAEC,GAAG,IAAG;MACf,MAAMC,OAAO,GAAGC,KAAK,CAACF,GAAG,CAAC;MAC1BC,OAAO,CAACE,IAAI,CAAEC,QAAQ,IAAI;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAMD,QAAQ,CAACE,MAAM;QAEvB,CAAC,MAAK;UACJ,OAAOF,QAAQ,CAACG,IAAI,EAAE;QACxB;MACA,CAAC,CAAC,CACHJ,IAAI,CAACI,IAAI,IAAI;QACZV,KAAK,CAACW,KAAK,CAACC,IAAI,CAACF,IAAI,CAACG,KAAK,CAAC;MAC9B,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;MACvC,CAAC,CAAC;IACjB,CAAC;IAED,MAAMG,OAAO,GAAEf,GAAG,IAAG;MACf,MAAMC,OAAO,GAAGC,KAAK,CAACF,GAAG,CAAC;MAC1BC,OAAO,CAACE,IAAI,CAAEC,QAAQ,IAAI;QAClB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;UAChB,MAAMD,QAAQ,CAACE,MAAM;QAEvB,CAAC,MAAK;UACJ,OAAOF,QAAQ,CAACG,IAAI,EAAE;QACxB;MACA,CAAC,CAAC,CACHJ,IAAI,CAACI,IAAI,IAAI;QACZnB,OAAO,CAACoB,KAAK,GAAC;UAAC,GAAGD;QAAI,CAAC;QACvBA,IAAI,CAACV,KAAK,CAACmB,OAAO,CAAChB,GAAG,IAAI;UACxBD,OAAO,CAACC,GAAG,CAAC;QACd,CAAC,CAAC;MACJ,CAAC,CAAC,CACDW,KAAK,CAAEC,KAAK,IAAK;QAChBC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEF,KAAK,CAAC;MACvC,CAAC,CAAC;IACjB,CAAC;IAGDzB,aAAa,CAAC,MAAI;MAChB4B,OAAO,CAACE,KAAK,CAACjB,GAAG,CAAC;IACpB,CAAC,CAAC","names":["ref","onBeforeMount","objFile","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","films","starships","getFilm","url","request","fetch","then","response","ok","status","json","value","push","title","catch","error","console","log","getFile","forEach","props"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/components/Pilotos.vue"],"sourcesContent":["<script setup>\nimport { ref, onBeforeMount } from 'vue'\nconst props=defineProps({\n  url:{\n        type: String\n    }\n})\nconst objFile=ref({\n  name: null,\n  height: null, \n  mass: null, \n  hair_color: null, \n  skin_color: null, \n  eye_color: null, \n  birth_year: null, \n  gender: null,\n  films: [],\n  starships:[],\n});\nconst films=ref([])\n\nconst getFilm=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              films.value.push(json.title);\n            })\n            .catch((error) => {\n              console.log('Ocurri贸 un error: ', error)\n               });\n}\n\nconst getFile=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              objFile.value={...json};\n              json.films.forEach(url => {\n                getFilm(url);\n              });\n            })\n            .catch((error) => {\n              console.log('Ocurri贸 un error: ', error)\n               });\n}\n\n\nonBeforeMount(()=>{\n  getFile(props.url);\n})\n\n</script>\n<template>\n  <div v-if=\"objFile.name!=null\">\n    <div v-if=\"store.getters.countPeople>0\">\n    \n    </div>\n    <div v-else>\n      {{objFile.name}}\n    </div>\n  </div>\n  <div v-if=\"films.length>0\">\n    <h4>peliculas en las que aparece:</h4>\n    <ul>\n      <li v-for=\"title in films\">{{title}}</li>\n    </ul>\n  </div>\n  \n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}