{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    mensaje: \"esto es prueba\",\n    pageShip: 1,\n    pagesLoaded: [],\n    ships: [],\n    stopGettingShips: false\n  },\n  mutations: {\n    loadShip(state, apiResponse) {\n      state.ships = [...state.ships, ...apiResponse];\n    },\n    pagesLoaded(state, page) {\n      state.pagesLoaded.push(page);\n    },\n    changeShipPage(state, val) {\n      state.pageShip = val;\n    },\n    stopGettingShips(state) {\n      state.stopGettingShips = true;\n    }\n  },\n  getters: {\n    countShips(state) {\n      return state.ships.length;\n    }\n  },\n  actions: {\n    changeShipPageNumber(context, val) {\n      // context.commit(\"changeShipPage\",{newPage: context.state.pageShip+=1})\n      context.commit(\"changeShipPage\", val);\n    },\n    getShipList(context) {\n      let page = context.state.pageShip;\n      // console.log (page)\n\n      let clone = [...context.state.pagesLoaded];\n      let lastPage = clone.sort()[clone.length - 1];\n      if (page == 1 || page != 1 && page - lastPage == 1) {\n        const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n        request.then(response => {\n          if (!response.ok) {\n            throw response.status;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          if (json.count > context.getters.countShips) {\n            context.commit(\"loadShip\", json.results);\n            context.commit(\"pagesLoaded\", page);\n            // console.log(context.getters.countShips)\n            // let newPage=page+=1;\n            // context.commit(\"changeShipPage\",{newPage: newPage})\n            // if (oldCantidad<context.getters.countShips){\n            // context.commit(\"changeShipPage\")\n            // }\n            // console.log (json.count + \" \" + context.getters.countShips)\n          }\n\n          if (context.getters.countShips >= json.count) {\n            context.commit(\"stopGettingShips\");\n          }\n        }).catch(error => {\n          console.log('Ocurrió un error: ', error);\n          // if (error==\"TypeError: Failed to fetch\"){\n          //   fetch(`https://swapi.py4e.com/api/starships/?page=${page}`)\n          //   .then( response => {\n          //     if (!response.ok) { \n          //       throw response.status\n\n          //     } else{\n          //       console.log(\"Fetch alternativo\")\n          //       return response.json()\n          //     }\n          //     })\n          //   .then(json => {\n          //     context.commit(\"loadShip\",json.results)\n          //     context.commit(\"changeShipPage\",page+=1)\n\n          //   })\n          //   .catch((error) => {\n          //     console.log('Ocurrió un error: ', error)\n          //     if (error==\"TypeError: Failed to fetch\"){\n          //       console.log(\"Falló el fetch nuevamente\")\n          //     }\n          //   });\n          // }\n        });\n      } else {\n        let clone = [...context.state.pagesLoaded];\n        clone.sort();\n        let lastPage = clone[clone.length - 1];\n        context.commit(\"changeShipPage\", lastPage);\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","mensaje","pageShip","pagesLoaded","ships","stopGettingShips","mutations","loadShip","apiResponse","page","push","changeShipPage","val","getters","countShips","length","actions","changeShipPageNumber","context","commit","getShipList","clone","lastPage","sort","request","fetch","then","response","ok","status","json","count","results","catch","error","console","log","modules"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    mensaje:\"esto es prueba\",\n    pageShip:1,\n    pagesLoaded:[],\n    ships: [],\n    stopGettingShips: false,\n  },\n  mutations: {\n    loadShip (state, apiResponse){\n      state.ships = [...state.ships, ...apiResponse]\n      },\n    pagesLoaded (state, page){\n      state.pagesLoaded.push(page)\n      },\n    changeShipPage (state, val){\n      state.pageShip=val;\n    },\n    stopGettingShips (state){\n      state.stopGettingShips = true\n    },\n  },\n  getters: {\n    countShips (state){\n         return state.ships.length\n     },\n  },\n  actions: {\n    changeShipPageNumber(context, val){\n      // context.commit(\"changeShipPage\",{newPage: context.state.pageShip+=1})\n      context.commit(\"changeShipPage\", val)\n    },\n    getShipList(context){\n      let page=context.state.pageShip\n      // console.log (page)\n      \n      let clone=[...context.state.pagesLoaded];\n      let lastPage=clone.sort()[clone.length-1];\n      \n      if (page==1 || (page!=1 && (page-lastPage)==1)){\n        \n      const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              if (json.count>context.getters.countShips){\n              context.commit(\"loadShip\",json.results)\n              context.commit(\"pagesLoaded\",page)\n              // console.log(context.getters.countShips)\n              // let newPage=page+=1;\n              // context.commit(\"changeShipPage\",{newPage: newPage})\n              // if (oldCantidad<context.getters.countShips){\n              // context.commit(\"changeShipPage\")\n              // }\n              // console.log (json.count + \" \" + context.getters.countShips)\n              }\n              if (context.getters.countShips>=json.count){\n                context.commit(\"stopGettingShips\")\n              }\n           \n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n              // if (error==\"TypeError: Failed to fetch\"){\n              //   fetch(`https://swapi.py4e.com/api/starships/?page=${page}`)\n              //   .then( response => {\n              //     if (!response.ok) { \n              //       throw response.status\n                    \n              //     } else{\n              //       console.log(\"Fetch alternativo\")\n              //       return response.json()\n              //     }\n              //     })\n              //   .then(json => {\n              //     context.commit(\"loadShip\",json.results)\n              //     context.commit(\"changeShipPage\",page+=1)\n               \n              //   })\n              //   .catch((error) => {\n              //     console.log('Ocurrió un error: ', error)\n              //     if (error==\"TypeError: Failed to fetch\"){\n              //       console.log(\"Falló el fetch nuevamente\")\n              //     }\n              //   });\n              // }\n            });\n          } else{\n            let clone=[...context.state.pagesLoaded];\n            clone.sort()\n            let lastPage=clone[clone.length-1];\n            context.commit(\"changeShipPage\", lastPage)\n          }\n          },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}