{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, onBeforeMount } from 'vue';\nimport Films from '@/components/Films.vue';\nimport NavesList from '@/components/NavesList.vue';\nexport default {\n  __name: 'Pilotos',\n  props: {\n    url: {\n      type: String\n    }\n  },\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const props = __props;\n    const objFile = ref({\n      name: null,\n      height: null,\n      mass: null,\n      hair_color: null,\n      skin_color: null,\n      eye_color: null,\n      birth_year: null,\n      gender: null,\n      films: [],\n      starships: []\n    });\n    const films = ref([]);\n    const navesUrls = ref([]);\n    const getFilm = url => {\n      const request = fetch(url);\n      request.then(response => {\n        if (!response.ok) {\n          throw response.status;\n        } else {\n          return response.json();\n        }\n      }).then(json => {\n        films.value.push(json.title);\n      }).catch(error => {\n        console.log('Ocurri贸 un error: ', error);\n      });\n    };\n    const getFile = url => {\n      const request = fetch(url);\n      request.then(response => {\n        if (!response.ok) {\n          throw response.status;\n        } else {\n          return response.json();\n        }\n      }).then(json => {\n        objFile.value = {\n          ...json\n        };\n        json.films.forEach(url => {\n          getFilm(url);\n        });\n        json.starships.forEach(url => {\n          navesUrls.value.push(url);\n        });\n        navesUrls;\n      }).catch(error => {\n        console.log('Ocurri贸 un error: ', error);\n      });\n    };\n    const navesData = ref([]);\n    navesUrls.forEach(url => {\n      console.log(url);\n      let naveFound = store.state.ships.find(item => item.url == url);\n      console.log(naveFound);\n      let naveName = naveFound.name;\n      let naveModel = naveFound.model;\n      navesData.value.push({\n        name: naveName,\n        model: naveModel\n      });\n    });\n    onBeforeMount(() => {\n      getFile(props.url);\n    });\n    const __returned__ = {\n      props,\n      objFile,\n      films,\n      navesUrls,\n      getFilm,\n      getFile,\n      navesData,\n      ref,\n      onBeforeMount,\n      Films,\n      NavesList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","onBeforeMount","Films","NavesList","objFile","name","height","mass","hair_color","skin_color","eye_color","birth_year","gender","films","starships","navesUrls","getFilm","url","request","fetch","then","response","ok","status","json","value","push","title","catch","error","console","log","getFile","forEach","navesData","naveFound","store","state","ships","find","item","naveName","naveModel","model","props"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/components/Pilotos.vue"],"sourcesContent":["<script setup>\nimport { ref, onBeforeMount } from 'vue'\nimport Films from '@/components/Films.vue'\nimport NavesList from '@/components/NavesList.vue'\nconst props=defineProps({\n  url:{\n        type: String\n    }\n})\nconst objFile=ref({\n  name: null,\n  height: null, \n  mass: null, \n  hair_color: null, \n  skin_color: null, \n  eye_color: null, \n  birth_year: null, \n  gender: null,\n  films: [],\n  starships:[],\n});\nconst films=ref([])\nconst navesUrls=ref([]);\n\nconst getFilm=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              films.value.push(json.title);\n            })\n            .catch((error) => {\n              console.log('Ocurri贸 un error: ', error)\n               });\n}\n\nconst getFile=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              objFile.value={...json};\n              json.films.forEach(url => {\n                getFilm(url);\n              });\n              json.starships.forEach(url => {\n                navesUrls.value.push(url)\n              });\n\n              navesUrls\n            })\n            .catch((error) => {\n              console.log('Ocurri贸 un error: ', error)\n               });\n}\n\n\nconst navesData=ref([]);\nnavesUrls.forEach (url=> {\n  console.log(url)\n  let naveFound=store.state.ships.find(item=>item.url==url);\n  console.log(naveFound)\n  let naveName=naveFound.name;\n  let naveModel=naveFound.model;\n  navesData.value.push({name: naveName, model:naveModel});\n})\n\n\nonBeforeMount(()=>{\n  getFile(props.url);\n})\n\n</script>\n<template>\n  <div v-if=\"objFile.name!=null\">\n    -{{objFile.name}} {{url}}\n  </div>\n  <div v-if=\"films.length>0\">\n    <h4>peliculas en las que aparece:</h4>\n    <ul>\n      <li v-for=\"title in films\">{{title}}</li>\n    </ul>\n  </div>\n  <div v-if=\"navesUrls.length>0\">\n    <h3>Naves</h3>\n    <NavesList v-for=\"(item, index) in navesData\" :key=\"index\" :name=\"item.name\" :model=\"item.model\" />\n  </div>\n  \n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}