{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 1\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"h4\", null, \"peliculas en las que aparece:\", -1 /* HOISTED */);\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"h3\", null, \"Naves\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [$setup.objFile.name != null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, \" -\" + _toDisplayString($setup.objFile.name) + \" \" + _toDisplayString($props.url), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true), $setup.films.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_2, [_hoisted_3, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.films, title => {\n    return _openBlock(), _createElementBlock(\"li\", null, _toDisplayString(title), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true), $setup.navesUrls.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_4, [_hoisted_5, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.navesData, (item, index) => {\n    return _openBlock(), _createBlock($setup[\"NavesList\"], {\n      key: index,\n      name: item.name,\n      model: item.model\n    }, null, 8 /* PROPS */, [\"name\", \"model\"]);\n  }), 128 /* KEYED_FRAGMENT */))])) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;;;;;gCAyFIA,oBAAsC,YAAlC,+BAA6B;;;;gCAMjCA,oBAAc,YAAV,OAAK;;;6DAVAC,cAAO,CAACC,IAAI,0BAAvBC,oBAEM,mBAFyB,IAC5B,oBAAEF,cAAO,CAACC,IAAI,IAAE,GAAC,oBAAEE,UAAG,uDAEdH,YAAK,CAACI,MAAM,sBAAvBF,oBAKM,oBAJJG,UAAsC,EACtCN,oBAEK,gCADHG,oBAAyCI,6BAArBN,YAAK,EAAdO,KAAK;yBAAhBL,oBAAyC,6BAAZK,KAAK;6EAG3BP,gBAAS,CAACI,MAAM,sBAA3BF,oBAGM,oBAFJM,UAAc,qBACdN,oBAAmGI,6BAAhEN,gBAAS,GAAzBS,IAAI,EAAEC,KAAK;yBAA9BC,aAAmGX;MAApDY,GAAG,EAAEF,KAAK;MAAGT,IAAI,EAAEQ,IAAI,CAACR,IAAI;MAAGY,KAAK,EAAEJ,IAAI,CAACI","names":["_createElementVNode","$setup","name","_createElementBlock","$props","length","_hoisted_3","_Fragment","title","_hoisted_5","item","index","_createBlock","key","model"],"sourceRoot":"","sources":["C:\\Users\\User01\\Documents\\ITAcademy\\Vue\\sprint8\\starwars\\src\\components\\Pilotos.vue"],"sourcesContent":["<script setup>\nimport { ref, onBeforeMount } from 'vue'\nimport NavesList from '@/components/NavesList.vue'\nconst props=defineProps({\n  url:{\n        type: String\n    }\n})\nconst objFile=ref({\n  name: null,\n  height: null, \n  mass: null, \n  hair_color: null, \n  skin_color: null, \n  eye_color: null, \n  birth_year: null, \n  gender: null,\n  films: [],\n  starships:[],\n});\nconst films=ref([])\nconst navesUrls=ref([]);\n\nconst getFilm=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              films.value.push(json.title);\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n               });\n}\n\nconst getFile=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              objFile.value={...json};\n              json.films.forEach(url => {\n                getFilm(url);\n              });\n              json.starships.forEach(url => {\n                navesUrls.value.push(url)\n              });\n\n              navesUrls\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n               });\n}\n\n\nconst navesData=ref([]);\nnavesUrls.forEach (url=> {\n  console.log(url)\n  let naveFound=store.state.ships.find(item=>item.url==url);\n  console.log(naveFound)\n  let naveName=naveFound.name;\n  let naveModel=naveFound.model;\n  navesData.value.push({name: naveName, model:naveModel});\n})\n\n\nonBeforeMount(()=>{\n  getFile(props.url);\n})\n\n</script>\n<template>\n  <div v-if=\"objFile.name!=null\">\n    -{{objFile.name}} {{url}}\n  </div>\n  <div v-if=\"films.length>0\">\n    <h4>peliculas en las que aparece:</h4>\n    <ul>\n      <li v-for=\"title in films\">{{title}}</li>\n    </ul>\n  </div>\n  <div v-if=\"navesUrls.length>0\">\n    <h3>Naves</h3>\n    <NavesList v-for=\"(item, index) in navesData\" :key=\"index\" :name=\"item.name\" :model=\"item.model\" />\n  </div>\n  \n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}