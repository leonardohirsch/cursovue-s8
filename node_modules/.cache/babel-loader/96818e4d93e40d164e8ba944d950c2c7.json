{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-a1f95022\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  class: \"film-title\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $setup.objFile.title != null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, _toDisplayString($setup.objFile.title) + \":\", 1 /* TEXT */), _createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, _toDisplayString($setup.objFile.episode_id), 1 /* TEXT */), _createElementVNode(\"li\", null, _toDisplayString($setup.objFile.director), 1 /* TEXT */), _createElementVNode(\"li\", null, _toDisplayString($setup.objFile.producer), 1 /* TEXT */), _createElementVNode(\"li\", null, _toDisplayString($setup.objFile.release_date), 1 /* TEXT */)])])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;EAyCWA,KAAK,EAAC;AAAY;;SADhBC,cAAO,CAACC,KAAK,0BAAxBC,oBAQM,oBAPFC,oBAAgD,OAAhDC,UAAgD,mBAAtBJ,cAAO,CAACC,KAAK,IAAE,GAAC,iBAC1CE,oBAKK,aAJHA,oBAA+B,6BAAzBH,cAAO,CAACK,UAAU,kBACxBF,oBAA6B,6BAAvBH,cAAO,CAACM,QAAQ,kBACtBH,oBAA6B,6BAAvBH,cAAO,CAACO,QAAQ,kBACtBJ,oBAAiC,6BAA3BH,cAAO,CAACQ,YAAY","names":["class","$setup","title","_createElementBlock","_createElementVNode","_hoisted_2","episode_id","director","producer","release_date"],"sourceRoot":"","sources":["C:\\Users\\User01\\Documents\\ITAcademy\\Vue\\sprint8\\starwars\\src\\components\\Films.vue"],"sourcesContent":["<script setup>\nimport { ref, onBeforeMount } from 'vue'\nconst props=defineProps({\n  url:{\n        type: String\n    }\n})\nconst objFile=ref({\n  title: null,\n  episode_id: null, \n  director: null, \n  producer: null, \n  release_date: null, \n});\n\nconst getFile=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              objFile.value={...json};\n            })\n            .catch((error) => {\n              console.log('OcurriÃ³ un error: ', error)\n               });\n}\n\n\nonBeforeMount(()=>{\n  getFile(props.url);\n})\n\n</script>\n<template>\n  <div v-if=\"objFile.title!=null\">\n      <div class=\"film-title\">{{objFile.title}}:</div>\n      <ul>\n        <li>{{objFile.episode_id}}</li>\n        <li>{{objFile.director}}</li>\n        <li>{{objFile.producer}}</li>\n        <li>{{objFile.release_date}}</li>\n      </ul>\n  </div>\n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n.film-title{\n font-style: italic;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}