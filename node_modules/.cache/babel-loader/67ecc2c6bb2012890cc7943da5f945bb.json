{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    // pageShip:1,\n    pagesLoaded: [],\n    ships: [],\n    stopGettingShips: false,\n    usersRegistered: []\n  },\n  mutations: {\n    loadShip(state, apiResponse) {\n      state.ships = [...state.ships, ...apiResponse];\n    },\n    pagesLoaded(state, page) {\n      state.pagesLoaded.push(page);\n    },\n    stopGettingShips(state) {\n      state.stopGettingShips = true;\n    },\n    loadUser(state, userData) {\n      state.usersRegistered.push(userData);\n    }\n  },\n  getters: {\n    countShips(state) {\n      return state.ships.length;\n    },\n    countUsers(state) {\n      return state.usersRegistered.length;\n    }\n  },\n  actions: {\n    loadUserToDb(context, user) {\n      context.commit(\"loadUser\", user);\n    },\n    getShipList(context, page) {\n      if (!context.state.stopGettingShips && !context.state.pagesLoaded.includes(page)) {\n        const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n        request.then(response => {\n          if (!response.ok) {\n            throw response.status;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          if (json.count > context.getters.countShips) {\n            context.commit(\"loadShip\", json.results);\n            context.commit(\"pagesLoaded\", page);\n          }\n          if (context.getters.countShips >= json.count) {\n            context.commit(\"stopGettingShips\");\n          }\n        }).catch(error => {\n          console.log('Ocurrió un error: ', error);\n          if (error == \"TypeError: Failed to fetch\") {\n            const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n            request.fetch(`https://swapi.py4e.com/api/starships/?page=${page}`).then(response => {\n              if (!response.ok) {\n                throw response.status;\n              } else {\n                console.log(\"Fetch alternativo\");\n                return response.json();\n              }\n            }).then(json => {\n              if (json.count > context.getters.countShips) {\n                context.commit(\"loadShip\", json.results);\n                context.commit(\"pagesLoaded\", page);\n              }\n              if (context.getters.countShips >= json.count) {\n                context.commit(\"stopGettingShips\");\n              }\n            }).catch(error => {\n              console.log('Ocurrió un error: ', error);\n              if (error == \"TypeError: Failed to fetch\") {\n                console.log(\"Falló el fetch nuevamente\");\n              }\n            });\n          }\n        });\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","pagesLoaded","ships","stopGettingShips","usersRegistered","mutations","loadShip","apiResponse","page","push","loadUser","userData","getters","countShips","length","countUsers","actions","loadUserToDb","context","user","commit","getShipList","includes","request","fetch","then","response","ok","status","json","count","results","catch","error","console","log","modules"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    // pageShip:1,\n    pagesLoaded:[],\n    ships: [],\n    stopGettingShips: false,\n    usersRegistered:[],\n  },\n  mutations: {\n    loadShip (state, apiResponse){\n      state.ships = [...state.ships, ...apiResponse]\n    },\n    pagesLoaded (state, page){\n      state.pagesLoaded.push(page)\n    },\n    stopGettingShips (state){\n      state.stopGettingShips = true\n    },\n    loadUser (state, userData){\n      state.usersRegistered.push(userData)\n    },\n  },\n  getters: {\n    countShips (state){\n         return state.ships.length\n     },\n    countUsers (state){\n       return state.usersRegistered.length\n    }\n  },\n  actions: {\n    loadUserToDb(context,user){\n      context.commit(\"loadUser\",user)\n    },\n    getShipList(context,page){\n      if (!context.state.stopGettingShips && !context.state.pagesLoaded.includes(page)){ \n      const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              if (json.count>context.getters.countShips){\n              context.commit(\"loadShip\",json.results)\n              context.commit(\"pagesLoaded\",page)\n              }\n              if (context.getters.countShips>=json.count){\n                context.commit(\"stopGettingShips\")\n              }\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n              if (error==\"TypeError: Failed to fetch\"){\n                const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n                request.fetch(`https://swapi.py4e.com/api/starships/?page=${page}`)\n                .then( response => {\n                   if (!response.ok) { \n                     throw response.status\n                   } else{\n                     console.log(\"Fetch alternativo\")\n                     return response.json()\n                   }\n                   })\n                 .then(json => {\n                    if (json.count>context.getters.countShips){\n                    context.commit(\"loadShip\",json.results)\n                    context.commit(\"pagesLoaded\",page)\n                    }\n                    if (context.getters.countShips>=json.count){\n                      context.commit(\"stopGettingShips\")\n                    }\n                               })\n                 .catch((error) => {\n                   console.log('Ocurrió un error: ', error)\n                   if (error==\"TypeError: Failed to fetch\"){\n                     console.log(\"Falló el fetch nuevamente\")\n                   }\n                 });\n               }\n            });\n          }\n          },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}