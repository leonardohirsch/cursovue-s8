{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, _toDisplayString($props.url), 1 /* TEXT */);\n}","map":{"version":3,"mappings":";;uBAiCEA,oBAEM,8BADFC,UAAG","names":["_createElementBlock","$props"],"sourceRoot":"","sources":["C:\\Users\\User01\\Documents\\ITAcademy\\Vue\\sprint8\\starwars\\src\\components\\Pilotos.vue"],"sourcesContent":["<script setup>\nconst props=defineProps({\n  url:{\n        type: String\n    }\n})\nconst apiUrl=props.url;\nconst getPiloto=()=>{\n      const request = fetch(props.url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              if (json.count>context.getters.countShips){\n              context.commit(\"loadShip\",json.results)\n              context.commit(\"pagesLoaded\",page)\n              }\n              if (context.getters.countShips>=json.count){\n                context.commit(\"stopGettingShips\")\n              }\n            })\n            .catch((error) => {\n              console.log('Ocurri√≥ un error: ', error)\n               });\n}\n\n</script>\n<template>\n  <div>\n    {{url}}\n  </div>\n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}