{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    authenticated: false,\n    usersRegistered: [],\n    pagesLoaded: [],\n    ships: [],\n    stopGettingShips: false,\n    pagesPeopleLoaded: [],\n    people: [],\n    stopGettingPeople: false\n  },\n  getters: {\n    countShips(state) {\n      return state.ships.length;\n    },\n    countPeople(state) {\n      return state.people.length;\n    },\n    countUsers(state) {\n      return state.usersRegistered.length;\n    }\n  },\n  mutations: {\n    setAuthentication(state, status) {\n      state.authenticated = status;\n    },\n    loadUser(state, userData) {\n      state.usersRegistered.push(userData);\n    },\n    loadShip(state, apiResponse) {\n      state.ships = [...state.ships, ...apiResponse];\n    },\n    pagesLoaded(state, page) {\n      state.pagesLoaded.push(page);\n    },\n    stopGettingShips(state) {\n      state.stopGettingShips = true;\n    },\n    loadPeople(state, apiResponse) {\n      state.people = [...state.people, ...apiResponse];\n    },\n    pagesPeopleLoaded(state, page) {\n      state.pagesPeopleLoaded.push(page);\n    },\n    stopGettingPeople(state) {\n      state.stopGettingPeople = true;\n    }\n  },\n  actions: {\n    doSetAuthentication(context, status) {\n      context.commit(\"setAuthentication\", status);\n    },\n    loadUserToDb(context, user) {\n      context.commit(\"loadUser\", user);\n    },\n    getShipList(context, page) {\n      if (!context.state.stopGettingShips && !context.state.pagesLoaded.includes(page)) {\n        const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n        request.then(response => {\n          if (!response.ok) {\n            throw response.status;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          if (json.count > context.getters.countShips) {\n            context.commit(\"loadShip\", json.results);\n            context.commit(\"pagesLoaded\", page);\n          }\n          if (context.getters.countShips >= json.count) {\n            context.commit(\"stopGettingShips\");\n          }\n        }).catch(error => {\n          console.log('Ocurrió un error: ', error);\n          if (error == \"TypeError: Failed to fetch\") {\n            const request = fetch(`https://swapi.py4e.com//api/starships/?page=${page}`);\n            request.then(response => {\n              if (!response.ok) {\n                throw response.status;\n              } else {\n                console.log(\"Fetch alternativo\");\n                return response.json();\n              }\n            }).then(json => {\n              if (json.count > context.getters.countShips) {\n                context.commit(\"loadShip\", json.results);\n                context.commit(\"pagesLoaded\", page);\n              }\n              if (context.getters.countShips >= json.count) {\n                context.commit(\"stopGettingShips\");\n              }\n            }).catch(error => {\n              console.log('Ocurrió un error: ', error);\n              if (error == \"TypeError: Failed to fetch\") {\n                console.log(\"Falló el fetch nuevamente\");\n              }\n            });\n          }\n        });\n      }\n    },\n    getPeopleList(context, page) {\n      if (!context.state.stopGettingPeople && !context.state.pagesPeopleLoaded.includes(page)) {\n        const request = fetch(`https://swapi.py4e.com//api/people/?page=${page}`);\n        request.then(response => {\n          if (!response.ok) {\n            throw response.status;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          if (json.count > context.getters.countPeople) {\n            context.commit(\"loadPeople\", json.results);\n            context.commit(\"pagesPeopleLoaded\", page);\n          }\n          if (context.getters.countPeople >= json.count) {\n            context.commit(\"stopGettingPeople\");\n          }\n        }).catch(error => {\n          console.log('Ocurrió un error: ', error);\n          if (error == \"TypeError: Failed to fetch\") {\n            const request = fetch(`https://swapi.dev/api/people/?page=${page}`);\n            request.fetch(`https://swapi.py4e.com/api/people/?page=${page}`).then(response => {\n              if (!response.ok) {\n                throw response.status;\n              } else {\n                console.log(\"Fetch alternativo\");\n                return response.json();\n              }\n            }).then(json => {\n              if (json.count > context.getters.countPeople) {\n                context.commit(\"loadPeople\", json.results);\n                context.commit(\"pagesPeopleLoaded\", page);\n              }\n              if (context.getters.countPeople >= json.count) {\n                context.commit(\"stopGettingPeople\");\n              }\n            }).catch(error => {\n              console.log('Ocurrió un error: ', error);\n              if (error == \"TypeError: Failed to fetch\") {\n                console.log(\"Falló el fetch nuevamente\");\n              }\n            });\n          }\n        });\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","authenticated","usersRegistered","pagesLoaded","ships","stopGettingShips","pagesPeopleLoaded","people","stopGettingPeople","getters","countShips","length","countPeople","countUsers","mutations","setAuthentication","status","loadUser","userData","push","loadShip","apiResponse","page","loadPeople","actions","doSetAuthentication","context","commit","loadUserToDb","user","getShipList","includes","request","fetch","then","response","ok","json","count","results","catch","error","console","log","getPeopleList","modules"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    authenticated:false,\n    usersRegistered:[],\n    pagesLoaded:[],\n    ships: [],\n    stopGettingShips: false,\n    pagesPeopleLoaded:[],\n    people: [],\n    stopGettingPeople: false,\n  },\n  getters: {\n    countShips (state){\n         return state.ships.length\n     },\n     countPeople (state){\n      return state.people.length\n  },\n    countUsers (state){\n       return state.usersRegistered.length\n    }\n  },\n  mutations: {\n    setAuthentication(state, status){\n      state.authenticated = status\n    },\n    loadUser (state, userData){\n      state.usersRegistered.push(userData)\n    },\n    loadShip (state, apiResponse){\n      state.ships = [...state.ships, ...apiResponse]\n    },\n    pagesLoaded (state, page){\n      state.pagesLoaded.push(page)\n    },\n    stopGettingShips (state){\n      state.stopGettingShips = true\n    },\n    loadPeople (state, apiResponse){\n      state.people = [...state.people, ...apiResponse]\n    },\n    pagesPeopleLoaded (state, page){\n      state.pagesPeopleLoaded.push(page)\n    },\n    stopGettingPeople (state){\n      state.stopGettingPeople = true\n    },\n  },\n  actions: {\n    doSetAuthentication(context,status){\n      context.commit(\"setAuthentication\",status)\n    },\n    loadUserToDb(context,user){\n      context.commit(\"loadUser\",user)\n    },\n    getShipList(context,page){\n      if (!context.state.stopGettingShips && !context.state.pagesLoaded.includes(page)){ \n      const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              if (json.count>context.getters.countShips){\n              context.commit(\"loadShip\",json.results)\n              context.commit(\"pagesLoaded\",page)\n              }\n              if (context.getters.countShips>=json.count){\n                context.commit(\"stopGettingShips\")\n              }\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n              if (error==\"TypeError: Failed to fetch\"){\n                const request = fetch(`https://swapi.py4e.com//api/starships/?page=${page}`);\n                request.then( response => {\n                   if (!response.ok) { \n                     throw response.status\n                   } else{\n                     console.log(\"Fetch alternativo\")\n                     return response.json()\n                   }\n                   })\n                 .then(json => {\n                    if (json.count>context.getters.countShips){\n                    context.commit(\"loadShip\",json.results)\n                    context.commit(\"pagesLoaded\",page)\n                    }\n                    if (context.getters.countShips>=json.count){\n                      context.commit(\"stopGettingShips\")\n                    }\n                               })\n                 .catch((error) => {\n                   console.log('Ocurrió un error: ', error)\n                   if (error==\"TypeError: Failed to fetch\"){\n                     console.log(\"Falló el fetch nuevamente\")\n                   }\n                 });\n               }\n            });\n          }\n          },\n    getPeopleList(context,page){\n            if (!context.state.stopGettingPeople && !context.state.pagesPeopleLoaded.includes(page)){ \n            const request = fetch(`https://swapi.py4e.com//api/people/?page=${page}`);\n            request.then( response => {\n                    if (!response.ok) {\n                      throw response.status\n                      \n                    } else{\n                      return response.json()\n                    }\n                    })\n                  .then(json => {\n                    if (json.count>context.getters.countPeople){\n                    context.commit(\"loadPeople\",json.results)\n                    context.commit(\"pagesPeopleLoaded\",page)\n                    }\n                    if (context.getters.countPeople>=json.count){\n                      context.commit(\"stopGettingPeople\")\n                    }\n                  })\n                  .catch((error) => {\n                    console.log('Ocurrió un error: ', error)\n                    if (error==\"TypeError: Failed to fetch\"){\n                      const request = fetch(`https://swapi.dev/api/people/?page=${page}`);\n                      request.fetch(`https://swapi.py4e.com/api/people/?page=${page}`)\n                      .then( response => {\n                         if (!response.ok) { \n                           throw response.status\n                         } else{\n                           console.log(\"Fetch alternativo\")\n                           return response.json()\n                         }\n                         })\n                       .then(json => {\n                          if (json.count>context.getters.countPeople){\n                          context.commit(\"loadPeople\",json.results)\n                          context.commit(\"pagesPeopleLoaded\",page)\n                          }\n                          if (context.getters.countPeople>=json.count){\n                            context.commit(\"stopGettingPeople\")\n                          }\n                                     })\n                       .catch((error) => {\n                         console.log('Ocurrió un error: ', error)\n                         if (error==\"TypeError: Failed to fetch\"){\n                           console.log(\"Falló el fetch nuevamente\")\n                         }\n                       });\n                     }\n                  });\n                }\n                },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}