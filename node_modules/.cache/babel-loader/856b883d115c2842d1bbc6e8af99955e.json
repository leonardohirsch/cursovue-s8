{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createTextVNode as _createTextVNode, createVNode as _createVNode, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-50eb1021\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"item-container\"\n};\nconst _hoisted_2 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Detalle\", -1 /* HOISTED */));\nconst _hoisted_3 = {\n  class: \"item-property\"\n};\nconst _hoisted_4 = {\n  class: \"item-value\"\n};\nconst _hoisted_5 = {\n  key: 0\n};\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"h4\", null, \"Pilotos\", -1 /* HOISTED */));\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"h3\", null, \"Naves: \" + _toDisplayString($setup.name) + \" //\", 1 /* TEXT */), _createElementVNode(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.objEntries, (entry, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"span\", _hoisted_3, _toDisplayString(entry[0]) + \":\", 1 /* TEXT */), _createTextVNode(), _createElementVNode(\"span\", _hoisted_4, _toDisplayString(entry[1]), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))]), $setup.pilotos.length > 0 ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, [_hoisted_6, _createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.pilotos, (url, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createVNode($setup[\"Pilotos\"], {\n      url: url\n    }, null, 8 /* PROPS */, [\"url\"])]);\n  }), 128 /* KEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"mappings":";;;EAoCOA,KAAK,EAAC;AAAgB;gEACzBC,oBAAgB,YAAZ,SAAO;;EAGDD,KAAK,EAAC;AAAe;;EAA4BA,KAAK,EAAC;AAAY;;;;gEAI3EC,oBAAgB,YAAZ,SAAO;;;6DATfA,oBAA2B,YAAvB,SAAO,oBAAEC,WAAI,IAAE,KAAG,iBACtBD,oBAaM,OAbNE,UAaM,GAZJC,UAAgB,EACdH,oBAIK,gCAHHI,oBAEGC,6BAF0BJ,iBAAU,GAA3BK,KAAK,EAAEC,KAAK;yBAAxBH,oBAEG;MAFuCI,GAAG,EAAED;IAAK,IACpDP,oBAAgD,QAAhDS,UAAgD,mBAAlBH,KAAK,OAAK,GAAC,qCAAQN,oBAA4C,QAA5CU,UAA4C,mBAAjBJ,KAAK;oCAG1EL,cAAO,CAACU,MAAM,sBAAzBP,oBAKM,oBAJJQ,UAAgB,EAChBZ,oBAEK,gCADHI,oBAA4EC,6BAAjDJ,cAAO,GAAtBY,GAAG,EAAEN,KAAK;yBAAtBH,oBAA4E;MAAvCI,GAAG,EAAED;IAAK,IAAEO,aAAsBb;MAAZY,GAAG,EAAEA;IAAG","names":["class","_createElementVNode","$setup","_hoisted_1","_hoisted_2","_createElementBlock","_Fragment","entry","index","key","_hoisted_3","_hoisted_4","length","_hoisted_6","url","_createVNode"],"sourceRoot":"","sources":["C:\\Users\\User01\\Documents\\ITAcademy\\Vue\\sprint8\\starwars\\src\\views\\NaveView.vue"],"sourcesContent":["<script setup>\nimport { ref, computed } from 'vue'\nimport { useRoute,useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport Pilotos from '@/components/Pilotos.vue'\n\nconst route = useRoute()\nconst router=useRouter()\nconst store = useStore()\n\nif (store.getters.countShips==0){\n  router.push({name:'naves'});//si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url especÃ­fica de nave)\n}\n\nconst name=ref(route.params.name);\nconst dataObj=store.state.ships.find(item=>item.name==name.value)\nconst objEntries=ref([]);\n\nconst title=computed(()=>{\n  return  route.meta.title+ (route.path)\n})\n\nconsole.log(title.value)\n\nObject.entries(dataObj).forEach((item)=>{\n  if (item[0]!='name' && item[0]!='pilots' && item[0]!='films' && item[0]!='created' && item[0]!='edited' && item[0]!='url'){\n  let name=item[0].charAt(0).toUpperCase() + item[0].slice(1).replaceAll(\"_\", \" \");\n  let value=item[1].charAt(0).toUpperCase() + item[1].slice(1);\n  objEntries.value.push([name, value]);\n  }\n})\n\nconst pilotos=dataObj.pilots;\n</script>\n<template>\n  <h3>Naves: {{name}} //</h3>\n  <div class=\"item-container\">\n    <h4>Detalle</h4>\n      <ul>\n        <li v-for=\"(entry, index) in objEntries\" :key=\"index\">\n        <span class=\"item-property\">{{entry[0]}}:</span> <span class=\"item-value\">{{entry[1]}}</span>\n      </li>\n      </ul>\n    <div v-if=\"pilotos.length>0\">\n      <h4>Pilotos</h4>\n      <ul>\n        <li v-for=\"(url, index) in pilotos\" :key=\"index\"><Pilotos :url=\"url\" /></li>\n      </ul>\n    </div>\n  </div>\n</template>\n<style scoped>\n.item-container{\n  background-color: #1c1b1b;\n  width: 50%;\n  padding: 1.5rem;\n  margin: 1rem auto;\n  text-align: left;\n}\n.item-property{\n  font-weight: bold;\n}\nul{\n  margin-top:0;\n}\nli::marker {\n\tcolor: #f9d81cda;\n}\nh3{\n  color: #f9d81cda;\n}\nh4{\n  margin-bottom: 0.4rem;\n  font-style: italic;\n  color: #f9d81cda;\n  border-bottom: #f9d81cda;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}