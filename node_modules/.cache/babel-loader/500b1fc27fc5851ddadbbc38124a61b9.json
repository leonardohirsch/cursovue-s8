{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport Pilotos from '@/components/Pilotos.vue';\n// import NaveFile from '@/components/NaveFile.vue'\n\nexport default {\n  __name: 'NaveView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    // @ is an alias to /src\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    const name = ref(route.params.name);\n    const dataObj = store.state.ships.find(item => item.name == name.value);\n    const pilotos = dataObj.pilots;\n    if (store.getters.countShips == 0) {\n      router.push({\n        name: 'naves'\n      }); //si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url específica de nave)\n    }\n\n    const objEntries = Object.entries(dataObj);\n    const __returned__ = {\n      route,\n      router,\n      store,\n      name,\n      dataObj,\n      pilotos,\n      objEntries,\n      ref,\n      useRoute,\n      useRouter,\n      useStore,\n      Pilotos\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":";AAEA,SAASA,GAAG,QAAQ,KAAK;AACzB,SAASC,QAAQ,EAACC,SAAS,QAAQ,YAAY;AAC/C,SAASC,QAAQ,QAAQ,MAAM;AAC/B,OAAOC,OAAO,MAAM,0BAA0B;AAC9C;;;;;;;;;IALA;IAOA,MAAMC,KAAK,GAAGJ,QAAQ,EAAE;IACxB,MAAMK,MAAM,GAACJ,SAAS,EAAE;IACxB,MAAMK,KAAK,GAAGJ,QAAQ,EAAE;IACxB,MAAMK,IAAI,GAACR,GAAG,CAACK,KAAK,CAACI,MAAM,CAACD,IAAI,CAAC;IACjC,MAAME,OAAO,GAACH,KAAK,CAACI,KAAK,CAACC,KAAK,CAACC,IAAI,CAACC,IAAI,IAAEA,IAAI,CAACN,IAAI,IAAEA,IAAI,CAACO,KAAK,CAAC;IACjE,MAAMC,OAAO,GAACN,OAAO,CAACO,MAAM;IAC5B,IAAIV,KAAK,CAACW,OAAO,CAACC,UAAU,IAAE,CAAC,EAAC;MAC9Bb,MAAM,CAACc,IAAI,CAAC;QAACZ,IAAI,EAAC;MAAO,CAAC,CAAC,CAAC;IAC9B;;IACA,MAAMa,UAAU,GAACC,MAAM,CAACC,OAAO,CAACb,OAAO,CAAC","names":["ref","useRoute","useRouter","useStore","Pilotos","route","router","store","name","params","dataObj","state","ships","find","item","value","pilotos","pilots","getters","countShips","push","objEntries","Object","entries"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/views/NaveView.vue"],"sourcesContent":["<script setup>\n// @ is an alias to /src\nimport { ref } from 'vue'\nimport { useRoute,useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport Pilotos from '@/components/Pilotos.vue'\n// import NaveFile from '@/components/NaveFile.vue'\n\nconst route = useRoute()\nconst router=useRouter()\nconst store = useStore()\nconst name=ref(route.params.name);\nconst dataObj=store.state.ships.find(item=>item.name==name.value)\nconst pilotos=dataObj.pilots;\nif (store.getters.countShips==0){\n  router.push({name:'naves'});//si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url específica de nave)\n}\nconst objEntries=Object.entries(dataObj);\n\n</script>\n<template>\n  <!-- \"name\": \"CR90 corvette\", \n    \"model\": \"CR90 corvette\", \n    \"manufacturer\": \"Corellian Engineering Corporation\", \n    \"cost_in_credits\": \"3500000\", \n    \"length\": \"150\", \n    \"max_atmosphering_speed\": \"950\", \n    \"crew\": \"30-165\", \n    \"passengers\": \"600\", \n    \"cargo_capacity\": \"3000000\", \n    \"consumables\": \"1 year\", \n    \"hyperdrive_rating\": \"2.0\", \n    \"MGLT\": \"60\",  -->\n  <!-- <div class=\"home\" v-if=\"store.getters.countShips>0\">\n    <p>{{ name }}</p>\n    <p>Modelo: {{ dataObj.model }}</p>\n    <p>Manufacturer: {{ dataObj.manufacturer }}</p>\n    <p>Cost: {{ dataObj.cost_in_credits }}</p>\n    <p>Max Speed: {{ dataObj.max_atmosphering_speed }}</p>\n    <p>crew: {{ dataObj.crew }}</p>\n    <p>passengers: {{ dataObj.passengers }}</p>\n  </div> -->\n  <div v-for=\"(entry, index) in objEntries\" :key=\"index\">\n    <div v-if=\"entry[0]!='pilots' && entry[0]!='films' && entry[0]!='created' && entry[0]!='edited' && entry[0]!='url'\">\n      {{entry[0]}}: {{entry[1]}}\n    </div>\n  </div>\n  <div v-if=\"pilotos.length>0\">\n    <h3>Pilotos</h3>\n    <Pilotos v-for=\"(url, index) in pilotos\" :key=\"index\" :url=\"url\" />\n  </div>\n</template>\n\n\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\n</style>\n"]},"metadata":{},"sourceType":"module"}