{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref, watch } from \"vue\";\nimport { useStore } from 'vuex';\nimport { useRouter } from 'vue-router';\nexport default {\n  __name: 'RegisterView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const store = useStore();\n    const router = useRouter();\n    const userName = ref(\"\");\n    const userEmail = ref(\"\");\n    const userEmailInput = ref(null);\n    const userPass = ref(\"\");\n    const passWarnSpan = ref(\"\");\n    const emailWarnSpan = ref(\"\");\n    const btnSubmitActive = ref(false);\n    const registerUser = () => {\n      if (localStorage.getItem(\"starwarsDbUsers\") === null) {\n        localStorage.setItem(\"starwarsDbUsers\", JSON.stringify([]));\n      }\n      let dataBaseUsers = JSON.parse(localStorage.getItem(\"starwarsDbUsers\"));\n      // if (store.state.usersRegistered.map(user=> user.email).includes(userEmail.value.toLowerCase())){\n      if (dataBaseUsers.map(user => user.email).includes(userEmail.value.toLowerCase())) {\n        userEmailInput.value.focus();\n        emailWarnSpan.value = \"Ya existe un usuario registrado con ese email\";\n      } else {\n        let lastUserId;\n        if (store.getters.countUsers > 0) {\n          // lastUserId =parseInt(store.state.usersRegistered.map(user=> user.id).sort((a, b) => b - a ).slice(0, 1));\n          lastUserId = parseInt(dataBaseUsers.map(user => user.id).sort((a, b) => b - a).slice(0, 1));\n        } else lastUserId = 0;\n        let newId = lastUserId + 1;\n        let newUser = {\n          id: newId,\n          email: userEmail.value.toLowerCase(),\n          password: userPass.value,\n          name: userName.value\n        };\n        store.dispatch(\"loadUserToDb\", newUser);\n        dataBaseUsers.push(newUser);\n        localStorage.setItem(\"starwarsDbUsers\", JSON.stringify(dataBaseUsers));\n        console.log(store.state.usersRegistered);\n        store.dispatch(\"doSetAuthentication\", true);\n        sessionStorage.setItem(\"userId\", newId);\n        sessionStorage.setItem(\"userName\", userName.value);\n        userEmail.value = \"\";\n        userPass.value = \"\";\n        userName.value = \"\";\n        alert(\"Te has registrado con éxito!\");\n        router.push({\n          name: 'naves'\n        });\n      }\n    };\n    watch([userName, userEmail, userPass], ([newUserName, newUserEmail, newUserPass]) => {\n      passWarnSpan.value = newUserPass.length > 0 && newUserPass.length < 4 ? \"La contraseña debe contener mínimamente 4 caracteres\" : \"\";\n      emailWarnSpan.value = newUserEmail.length > 0 && !newUserEmail.includes('@') ? \"El email debe ser una dirección válida\" : \"\";\n      if (newUserName.length > 1 && newUserPass.length >= 4 && newUserEmail.length > 4 && newUserEmail.includes('@')) {\n        btnSubmitActive.value = true;\n      } else btnSubmitActive.value = false;\n    });\n    const __returned__ = {\n      store,\n      router,\n      userName,\n      userEmail,\n      userEmailInput,\n      userPass,\n      passWarnSpan,\n      emailWarnSpan,\n      btnSubmitActive,\n      registerUser,\n      ref,\n      watch,\n      useStore,\n      useRouter\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","watch","useStore","useRouter","store","router","userName","userEmail","userEmailInput","userPass","passWarnSpan","emailWarnSpan","btnSubmitActive","registerUser","localStorage","getItem","setItem","JSON","stringify","dataBaseUsers","parse","map","user","email","includes","value","toLowerCase","focus","lastUserId","getters","countUsers","parseInt","id","sort","a","b","slice","newId","newUser","password","name","dispatch","push","console","log","state","usersRegistered","sessionStorage","alert","newUserName","newUserEmail","newUserPass","length"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/views/RegisterView.vue"],"sourcesContent":["<script setup>\nimport {ref, watch} from \"vue\";\nimport { useStore } from 'vuex'\nimport { useRouter } from 'vue-router'\n\nconst store = useStore()\n\nconst router = useRouter()\n\nconst userName=ref(\"\");\nconst userEmail=ref(\"\");\nconst userEmailInput=ref(null);\nconst userPass=ref(\"\");\nconst passWarnSpan=ref(\"\");\nconst emailWarnSpan=ref(\"\");\nconst btnSubmitActive=ref(false);\n\n\nconst registerUser=()=>{\n  if (localStorage.getItem(\"starwarsDbUsers\") === null) {\n    localStorage.setItem(\"starwarsDbUsers\", JSON.stringify([]));\n  }\n  let dataBaseUsers= JSON.parse(localStorage.getItem(\"starwarsDbUsers\"))\n  // if (store.state.usersRegistered.map(user=> user.email).includes(userEmail.value.toLowerCase())){\n  if (dataBaseUsers.map(user=> user.email).includes(userEmail.value.toLowerCase())){\n    userEmailInput.value.focus();\n    emailWarnSpan.value=\"Ya existe un usuario registrado con ese email\";\n  } else{\n    let lastUserId;\n    if (store.getters.countUsers>0){\n      // lastUserId =parseInt(store.state.usersRegistered.map(user=> user.id).sort((a, b) => b - a ).slice(0, 1));\n      lastUserId =parseInt(dataBaseUsers.map(user=> user.id).sort((a, b) => b - a ).slice(0, 1));\n    } else lastUserId=0;\n    let newId=lastUserId+1;\n    let newUser={\n      id: newId,\n      email: userEmail.value.toLowerCase(),\n      password: userPass.value,\n      name: userName.value,\n    }\n    store.dispatch(\"loadUserToDb\", newUser)\n    dataBaseUsers.push(newUser)\n    localStorage.setItem(\"starwarsDbUsers\", JSON.stringify(dataBaseUsers));\n    \n    console.log(store.state.usersRegistered)\n\n    store.dispatch(\"doSetAuthentication\", true)\n    sessionStorage.setItem(\"userId\",newId);\n    sessionStorage.setItem(\"userName\",userName.value);\n    userEmail.value=\"\";\n    userPass.value=\"\";\n    userName.value=\"\";\n    alert(\"Te has registrado con éxito!\")\n    router.push({name:'naves'});\n  }\n  \n}\n\nwatch([userName, userEmail,userPass], ([newUserName, newUserEmail, newUserPass]) => {\n  passWarnSpan.value= newUserPass.length>0 && newUserPass.length<4 ? \"La contraseña debe contener mínimamente 4 caracteres\" : \"\";\n  emailWarnSpan.value= newUserEmail.length>0 && !newUserEmail.includes('@')  ? \"El email debe ser una dirección válida\" : \"\";\n  \n  if (newUserName.length>1 && newUserPass.length>=4 && newUserEmail.length>4 && newUserEmail.includes('@')){\n    btnSubmitActive.value=true;\n  } else btnSubmitActive.value=false;\n});\n\n</script>\n<template>\n  <div >\n    <h2>Registrarse //</h2>\n    <form @submit.prevent=\"registerUser()\">\n      <div class=\"form-container\">\n        <div class=\"form-row\">\n          <input type=\"text\" v-model.trim=\"userName\" placeholder=\"Nombre y Apellido\" >\n        </div>\n        <div class=\"form-row\">\n          <input type=\"email\" ref=\"userEmailInput\" v-model.trim=\"userEmail\" placeholder=\"Email\" required>\n          <span v-if=\"emailWarnSpan!=''\">{{emailWarnSpan}}</span>\n        </div>\n        <div class=\"form-row\">\n          <input type=\"password\" v-model.trim=\"userPass\" placeholder=\"Password\" required>\n          <span v-if=\"passWarnSpan!=''\">{{passWarnSpan}}</span>\n        </div>\n        <div v-if=\"btnSubmitActive\" class=\"form-row\">\n          <button type=\"submit\">Registrarse!</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n<style scoped>\nh2{\n  color: #f9d81cda;\n}\n.form-container{\n  background-color: #1c1b1b;\n  width: 50%;\n  padding: 1.5rem;\n  margin: 1rem auto;\n}\ninput{\n  width: 100%;\n  margin: 1rem 0;\n  color: #1c1b1b;\n  font-weight: bold; \n}\n::-webkit-input-placeholder { /* Chrome/Opera/Safari */\n  color: #1c1b1b;\n  font-weight: bold;\n}\n::-moz-placeholder { /* Firefox 19+ */\n  color: #1c1b1b;\n  font-weight: bold;\n}\nbutton{\n  margin-top: 1rem;\n  background-color: transparent;\n  border-color:  #a8a3a3;\n  color: #a8a3a3;\n  padding: 1rem;\n  font-weight: bold;\n}\nbutton:hover{\n  border-color: #f9d81cda;\n  color: #f9d81cda;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}