{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { ref } from 'vue';\nimport { useRoute, useRouter } from 'vue-router';\nimport { useStore } from 'vuex';\nimport Films from '@/components/Films.vue';\nimport NavesList from '@/components/NavesList.vue';\n// import NaveFile from '@/components/NaveFile.vue'\n\nexport default {\n  __name: 'PersonView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n\n    // @ is an alias to /src\n    const route = useRoute();\n    const router = useRouter();\n    const store = useStore();\n    if (store.getters.countPeople == 0) {\n      router.push({\n        name: 'people'\n      }); //si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url específica de nave)\n    }\n\n    let isShipLoaded = ref(false);\n    const name = ref(route.params.name);\n    const dataObj = store.state.people.find(item => item.name == name.value);\n    const objEntries = ref([]);\n    Object.entries(dataObj).forEach(item => {\n      if (item[0] != 'name' && item[0] != 'species' && item[0] != 'starships' && item[0] != 'films' && item[0] != 'homeworld' && item[0] != 'vehicles' && item[0] != 'created' && item[0] != 'edited' && item[0] != 'url') {\n        let name = item[0].charAt(0).toUpperCase() + item[0].slice(1).replaceAll(\"_\", \" \");\n        let value = item[1].charAt(0).toUpperCase() + item[1].slice(1);\n        objEntries.value.push([name, value]);\n      }\n    });\n    const films = dataObj.films;\n    const navesUrls = dataObj.starships;\n    const navesData = ref([]);\n    if (navesUrls.length > 0) {\n      navesUrls.forEach(url => {\n        if (store.getters.countShips > 0 && store.state.ships.some(item => item.url == url)) {\n          let naveFound = store.state.ships.find(item => item.url == url);\n          navesData.value.push({\n            name: naveFound.name,\n            model: naveFound.model\n          });\n          isShipLoaded.value = true;\n        } else {\n          const request = fetch(url);\n          request.then(response => {\n            if (!response.ok) {\n              throw response.status;\n            } else {\n              return response.json();\n            }\n          }).then(json => {\n            navesData.value.push({\n              name: json.name,\n              model: json.model\n            });\n          }).catch(error => {\n            console.log('Ocurrió un error: ', error);\n          });\n        }\n      });\n    }\n    const __returned__ = {\n      route,\n      router,\n      store,\n      isShipLoaded,\n      name,\n      dataObj,\n      objEntries,\n      films,\n      navesUrls,\n      navesData,\n      ref,\n      useRoute,\n      useRouter,\n      useStore,\n      Films,\n      NavesList\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"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","names":["ref","useRoute","useRouter","useStore","Films","NavesList","route","router","store","getters","countPeople","push","name","isShipLoaded","params","dataObj","state","people","find","item","value","objEntries","Object","entries","forEach","charAt","toUpperCase","slice","replaceAll","films","navesUrls","starships","navesData","length","url","countShips","ships","some","naveFound","model","request","fetch","then","response","ok","status","json","catch","error","console","log"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/views/PersonView.vue"],"sourcesContent":["<script setup>\n// @ is an alias to /src\nimport { ref } from 'vue'\nimport { useRoute,useRouter } from 'vue-router'\nimport { useStore } from 'vuex'\nimport Films from '@/components/Films.vue'\nimport NavesList from '@/components/NavesList.vue'\n// import NaveFile from '@/components/NaveFile.vue'\n\nconst route = useRoute()\nconst router=useRouter()\nconst store = useStore()\n\nif (store.getters.countPeople==0){\n  router.push({name:'people'});//si accede directo o reload, redirect a listado (porque no tenemos propiedad id para hacer fetch a url específica de nave)\n}\n\nlet isShipLoaded=ref(false);\n\nconst name=ref(route.params.name);\nconst dataObj=store.state.people.find(item=>item.name==name.value)\nconst objEntries=ref([]);\n\nObject.entries(dataObj).forEach((item)=>{\n  if (item[0]!='name' && item[0]!='species' && item[0]!='starships' && item[0]!='films' && item[0]!='homeworld' && item[0]!='vehicles' && item[0]!='created' && item[0]!='edited' && item[0]!='url'){\n  let name=item[0].charAt(0).toUpperCase() + item[0].slice(1).replaceAll(\"_\", \" \");\n  let value=item[1].charAt(0).toUpperCase() + item[1].slice(1);\n  objEntries.value.push([name, value]);\n  }\n})\n\nconst films=dataObj.films;\n\nconst navesUrls=dataObj.starships;\nconst navesData=ref([]);\n\nif (navesUrls.length>0){\nnavesUrls.forEach (url=> {\n  if (store.getters.countShips>0 && store.state.ships.some(item=>item.url==url)){\n    let naveFound=store.state.ships.find(item=>item.url==url);\n    navesData.value.push({name: naveFound.name, model:naveFound.model});\n    isShipLoaded.value=true;\n  } else{\n    const request = fetch(url);\n    request.then( response => {\n              if (!response.ok) {\n                throw response.status\n             \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              navesData.value.push({name: json.name, model:json.model});\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n            });\n  }\n  \n})\n}\n\n</script>\n<template>\n    <h3>{{name}} //</h3>\n    <div class=\"item-container\">\n      <h4>Detalle</h4>\n      <ul>\n        <li v-for=\"(entry, index) in objEntries\" :key=\"index\">\n        <span class=\"item-property\">{{entry[0]}}:</span> <span class=\"item-value\">{{entry[1]}}</span>\n      </li>\n      </ul>\n        <div v-if=\"films.length>0\">\n          <h4>Films</h4>\n          <ul >\n            <li v-for=\"(url, index) in films\" :key=\"index\" class=\"sublistado-item\"><Films :url=\"url\" /></li>\n          </ul>\n        </div>\n        <div v-if=\"navesUrls.length>0\">\n          <h4>Naves</h4>\n          <div v-if=\"isShipLoaded\">\n            <ul>\n              <li v-for=\"(item, index) in navesData\" :key=\"index\"><NavesList :name=\"item.name\" :model=\"item.model\" /></li>\n            </ul>\n          </div>\n          <div v-else>\n            <ul>\n              <li v-for=\"(item, index) in navesData\" :key=\"index\"><span class=\"ship-name\">{{item.name}}</span> ({{item.model}})</li>\n            </ul>\n          </div>\n        </div>\n    </div>\n</template>\n\n\n<style scoped>\n.item-container{\n  background-color: #1c1b1b;\n  width: 50%;\n  padding: 1.5rem;\n  margin: 1rem auto;\n  text-align: left;\n}\n.item-property{\n  font-weight: bold;\n}\nul{\n  margin-top:0;\n}\nli::marker {\n\tcolor: #f9d81cda;\n}\nh3{\n  color: #f9d81cda;\n}\nh4{\n  margin-bottom: 0.4rem;\n  font-style: italic;\n  color: #f9d81cda;\n  border-bottom: #f9d81cda;\n}\n.ship-name{\n  font-weight: bold;\n}\n.sublistado-item{\n  margin-bottom: 0.3rem;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}