{"ast":null,"code":"import { ref, watch } from \"vue\";\n\n// import { useRouter, useRoute } from 'vue-router'\n\n// const router = useRouter()\n// const route = useRoute()\n\nexport default {\n  __name: 'LoginView',\n  setup(__props, {\n    expose\n  }) {\n    expose();\n    const userName = ref(\"\");\n    const userEmail = ref(\"\");\n    const userPass = ref(\"\");\n    const passWarnSpan = ref(\"\");\n    const registerUser = () => {};\n    watch([userName, userEmail, userPass], ([newUserName, newUserEmail, newUserPass]) => {\n      if (newUserPass.length > 1 && newUserPass.length < 4) {\n        passWarnSpan.value = \"La contraseña debe contener mínimamente 4 caracteres\";\n      }\n      if (newNombre != \"\" || newCliente != \"\") {\n        let url = {};\n        let urlClone = {\n          ...route.query\n        };\n        delete urlClone.nombre;\n        delete urlClone.cliente;\n        newNombre != \"\" ? url.nombre = newNombre.toLocaleLowerCase().replaceAll(\" \", \"_\") : router.replace({\n          query: {\n            ...route.query,\n            nombre: undefined\n          }\n        });\n        newCliente != \"\" ? url.cliente = newCliente.toLocaleLowerCase().replaceAll(\" \", \"_\") : router.replace({\n          query: {\n            ...route.query,\n            cliente: undefined\n          }\n        });\n        router.replace({\n          query: {\n            ...urlClone,\n            ...url\n          }\n        });\n      } else if (newNombre == \"\" && newCliente == \"\") {\n        router.replace({\n          query: {}\n        });\n      }\n    });\n    const __returned__ = {\n      userName,\n      userEmail,\n      userPass,\n      passWarnSpan,\n      registerUser,\n      ref,\n      watch\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"mappings":"AACA,SAAQA,GAAG,EAAEC,KAAK,QAAO,KAAK;;AAG9B;;AAEA;AACA;;;;;;;;IACA,MAAMC,QAAQ,GAACF,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMG,SAAS,GAACH,GAAG,CAAC,EAAE,CAAC;IACvB,MAAMI,QAAQ,GAACJ,GAAG,CAAC,EAAE,CAAC;IACtB,MAAMK,YAAY,GAACL,GAAG,CAAC,EAAE,CAAC;IAC1B,MAAMM,YAAY,GAAC,MAAI,CAEvB,CAAC;IACDL,KAAK,CAAC,CAACC,QAAQ,EAAEC,SAAS,EAACC,QAAQ,CAAC,EAAE,CAAC,CAACG,WAAW,EAAEC,YAAY,EAAEC,WAAW,CAAC,KAAK;MAClF,IAAIA,WAAW,CAACC,MAAM,GAAC,CAAC,IAAID,WAAW,CAACC,MAAM,GAAC,CAAC,EAAC;QAC/CL,YAAY,CAACM,KAAK,GAAC,sDAAsD;MAC3E;MACM,IAAIC,SAAS,IAAE,EAAE,IAAIC,UAAU,IAAE,EAAE,EAAC;QAClC,IAAIC,GAAG,GAAC,CAAC,CAAC;QACV,IAAIC,QAAQ,GAAC;UAAC,GAAGC,KAAK,CAACC;QAAK,CAAC;QAC7B,OAAOF,QAAQ,CAACG,MAAM;QACtB,OAAOH,QAAQ,CAACI,OAAO;QACvBP,SAAS,IAAE,EAAE,GAAGE,GAAG,CAACI,MAAM,GAACN,SAAS,CAACQ,iBAAiB,EAAE,CAACC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,GAAEC,MAAM,CAACC,OAAO,CAAC;UAACN,KAAK,EAAC;YAAC,GAAGD,KAAK,CAACC,KAAK;YAAEC,MAAM,EAAEM;UAAS;QAAC,CAAC,CAAC;QAE1IX,UAAU,IAAE,EAAE,GAAGC,GAAG,CAACK,OAAO,GAACN,UAAU,CAACO,iBAAiB,EAAE,CAACC,UAAU,CAAC,GAAG,EAAE,GAAG,CAAC,GAAEC,MAAM,CAACC,OAAO,CAAC;UAACN,KAAK,EAAC;YAAC,GAAGD,KAAK,CAACC,KAAK;YAAEE,OAAO,EAAEK;UAAS;QAAC,CAAC,CAAC;QAE9IF,MAAM,CAACC,OAAO,CAAC;UAACN,KAAK,EAAE;YAAC,GAAGF,QAAQ;YAAE,GAAGD;UAAI;QAAE,CAAC,CAAC;MAClD,CAAC,MAAM,IAAIF,SAAS,IAAE,EAAE,IAAIC,UAAU,IAAE,EAAE,EAAC;QACzCS,MAAM,CAACC,OAAO,CAAC;UAACN,KAAK,EAAE,CAAC;QAAE,CAAC,CAAC;MAC9B;IACR,CAAC,CAAC","names":["ref","watch","userName","userEmail","userPass","passWarnSpan","registerUser","newUserName","newUserEmail","newUserPass","length","value","newNombre","newCliente","url","urlClone","route","query","nombre","cliente","toLocaleLowerCase","replaceAll","router","replace","undefined"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/views/LoginView.vue"],"sourcesContent":["<script setup>\nimport {ref, watch} from \"vue\";\n\n\n// import { useRouter, useRoute } from 'vue-router'\n\n// const router = useRouter()\n// const route = useRoute()\nconst userName=ref(\"\");\nconst userEmail=ref(\"\");\nconst userPass=ref(\"\");\nconst passWarnSpan=ref(\"\");\nconst registerUser=()=>{\n\n}\nwatch([userName, userEmail,userPass], ([newUserName, newUserEmail, newUserPass]) => {\n  if (newUserPass.length>1 && newUserPass.length<4){\n    passWarnSpan.value=\"La contraseña debe contener mínimamente 4 caracteres\";\n  }\n        if (newNombre!=\"\" || newCliente!=\"\"){\n          let url={};\n          let urlClone={...route.query};\n          delete urlClone.nombre;\n          delete urlClone.cliente;\n          newNombre!=\"\" ? url.nombre=newNombre.toLocaleLowerCase().replaceAll(\" \", \"_\"): router.replace({query:{...route.query, nombre: undefined}})\n          \n          newCliente!=\"\" ? url.cliente=newCliente.toLocaleLowerCase().replaceAll(\" \", \"_\"): router.replace({query:{...route.query, cliente: undefined}})\n          \n          router.replace({query: {...urlClone, ...url } })\n        } else if (newNombre==\"\" && newCliente==\"\"){\n          router.replace({query: {} }) \n        }\n});\n\n</script>\n<template>\n  <div >\n    <h1>Registrarse</h1>\n    <form @submit.prevent=\"registerUser()\">\n      <div>\n        <div>\n          <input type=\"text\" v-model.trim=\"userName\" placeholder=\"Nombre y Apellido\" >\n        </div>\n        <div>\n          <input type=\"email\" v-model.trim=\"userEmail\" placeholder=\"Email\" required>\n        </div>\n        <div>\n          <input type=\"password\" v-model.trim=\"userPass\" placeholder=\"Password\" required><span v-if=\"passWarnSpan!=''\">{{passWarnSpan}}</span>\n        </div>\n        <div>\n          <button type=\"submit\">Registrarse!</button>\n        </div>\n      </div>\n    </form>\n  </div>\n</template>\n"]},"metadata":{},"sourceType":"module"}