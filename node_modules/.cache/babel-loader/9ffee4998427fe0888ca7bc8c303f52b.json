{"ast":null,"code":"import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, createElementVNode as _createElementVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-3fc56a9c\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  key: 1,\n  class: \"item-name\"\n};\nconst _hoisted_4 = {\n  key: 2\n};\nconst _hoisted_5 = {\n  class: \"films-list\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return $setup.objFile.name != null ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, [$setup.isPersonLoaded ? (_openBlock(), _createElementBlock(\"span\", _hoisted_2, [_createVNode(_component_router_link, {\n    to: {\n      name: 'person',\n      params: {\n        name: $setup.objFile.name\n      }\n    }\n  }, {\n    default: _withCtx(() => [_createTextVNode(_toDisplayString($setup.objFile.name), 1 /* TEXT */)]),\n\n    _: 1 /* STABLE */\n  }, 8 /* PROPS */, [\"to\"])])) : (_openBlock(), _createElementBlock(\"span\", _hoisted_3, _toDisplayString($setup.objFile.name), 1 /* TEXT */)), $setup.films.length > 0 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_4, [_createTextVNode(\"(Films: \"), _createElementVNode(\"ul\", _hoisted_5, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($setup.films, title => {\n    return _openBlock(), _createElementBlock(\"li\", null, _toDisplayString(title), 1 /* TEXT */);\n  }), 256 /* UNKEYED_FRAGMENT */))])])) : _createCommentVNode(\"v-if\", true)])) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;;;;;;EAiFUA,KAAK,EAAC;;;;;;EAG0BA,KAAK,EAAC;AAAY;;;SAP/CC,cAAO,CAACC,IAAI,0BAAvBC,oBAWI,oBAVUF,qBAAc,kBAA1BE,oBAEO,qBADLC,aAA8FC;IAAhFC,EAAE;MAAAJ;MAAAK;QAAAL,MAAgCD,cAAO,CAACC;MAAI;IAAA;;sBAAI,MAAgB,mCAAdD,cAAO,CAACC,IAAI;;;gDAEhFC,oBAEO,QAFPK,UAEO,mBADHP,cAAO,CAACC,IAAI,mBAEND,YAAK,CAACQ,MAAM,sBAAxBN,oBAGO,sCAHqB,UAAQ,uBAE7B,MAF6BO,UAE7B,sBADHP,oBAAyCQ,6BAArBV,YAAK,EAAdW,KAAK;yBAAhBT,oBAAyC,6BAAZS,KAAK","names":["class","$setup","name","_createElementBlock","_createVNode","_component_router_link","to","params","_hoisted_3","length","_hoisted_5","_Fragment","title"],"sourceRoot":"","sources":["C:\\Users\\User01\\Documents\\ITAcademy\\Vue\\sprint8\\starwars\\src\\components\\Pilotos.vue"],"sourcesContent":["<script setup>\nimport { ref, onBeforeMount } from 'vue'\nimport { useStore } from 'vuex'\nconst store = useStore()\nconst props=defineProps({\n  url:{\n        type: String\n    }\n})\n\nlet isPersonLoaded=ref(false);\n\nconst objFile=ref({\n  name: null,\n  height: null, \n  mass: null, \n  hair_color: null, \n  skin_color: null, \n  eye_color: null, \n  birth_year: null, \n  gender: null,\n  films: [],\n  starships:[],\n});\nconst films=ref([])\n\nconst getFilm=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              films.value.push(json.title);\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n               });\n}\n\nconst getFile=(url)=>{\n      const request = fetch(url);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              objFile.value={...json};\n              json.films.forEach(url => {\n                getFilm(url);\n              });\n              if (store.getters.countPeople>0){\n                if (store.state.people.some(item=>item.name==json.name)){\n                  isPersonLoaded.value=true;\n                }\n              }\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n               });\n}\n\n\nonBeforeMount(()=>{\n  getFile(props.url);\n})\n\n</script>\n<template>\n  <div v-if=\"objFile.name!=null\">\n    <span v-if=\"isPersonLoaded\">\n      <router-link :to=\"{name:'person', params: {name:objFile.name}}\">{{objFile.name}}</router-link>\n    </span>\n    <span class=\"item-name\" v-else>\n      {{objFile.name}}\n    </span>\n  <span v-if=\"films.length>0\">(Films: <ul class=\"films-list\">\n      <li v-for=\"title in films\">{{title}}</li>\n    </ul>\n  </span>\n</div>\n  \n</template>\n<style scoped>\n/* a {\n  display: block;\n  color: #f9d81cda;\n  text-decoration: none;\n  margin-top: 1rem;\n} */\n.item-name{\n  font-weight: bold;\n}\n.films-list{\n  display: inline;\n  list-style: none;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}