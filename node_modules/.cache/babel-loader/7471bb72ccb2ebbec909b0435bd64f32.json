{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from 'vuex';\nexport default createStore({\n  state: {\n    mensaje: \"esto es prueba\",\n    // pageShip:1,\n    pagesLoaded: [],\n    ships: [],\n    stopGettingShips: false\n  },\n  mutations: {\n    loadShip(state, apiResponse) {\n      state.ships = [...state.ships, ...apiResponse];\n    },\n    pagesLoaded(state, page) {\n      state.pagesLoaded.push(page);\n    },\n    stopGettingShips(state) {\n      state.stopGettingShips = true;\n    }\n  },\n  getters: {\n    countShips(state) {\n      return state.ships.length;\n    }\n  },\n  actions: {\n    getShipList(context, page) {\n      if (!context.state.stopGettingShips && !context.state.pagesLoaded.includes(page)) {\n        const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n        request.then(response => {\n          if (!response.ok) {\n            throw response.status;\n          } else {\n            return response.json();\n          }\n        }).then(json => {\n          if (json.count > context.getters.countShips) {\n            context.commit(\"loadShip\", json.results);\n            context.commit(\"pagesLoaded\", page);\n          }\n          if (context.getters.countShips >= json.count) {\n            context.commit(\"stopGettingShips\");\n          }\n        }).catch(error => {\n          console.log('Ocurrió un error: ', error);\n          if (error == \"TypeError: Failed to fetch\") {\n            const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n            request.fetch(`https://swapi.py4e.com/api/starships/?page=${page}`).then(response => {\n              if (!response.ok) {\n                throw response.status;\n              } else {\n                console.log(\"Fetch alternativo\");\n                return response.json();\n              }\n            }).then(json => {\n              if (json.count > context.getters.countShips) {\n                context.commit(\"loadShip\", json.results);\n                context.commit(\"pagesLoaded\", page);\n              }\n              if (context.getters.countShips >= json.count) {\n                context.commit(\"stopGettingShips\");\n              }\n            }).catch(error => {\n              console.log('Ocurrió un error: ', error);\n              if (error == \"TypeError: Failed to fetch\") {\n                console.log(\"Falló el fetch nuevamente\");\n              }\n            });\n          }\n        });\n      }\n    }\n  },\n  modules: {}\n});","map":{"version":3,"names":["createStore","state","mensaje","pagesLoaded","ships","stopGettingShips","mutations","loadShip","apiResponse","page","push","getters","countShips","length","actions","getShipList","context","includes","request","fetch","then","response","ok","status","json","count","commit","results","catch","error","console","log","modules"],"sources":["C:/Users/User01/Documents/ITAcademy/Vue/sprint8/starwars/src/store/index.js"],"sourcesContent":["import { createStore } from 'vuex'\n\nexport default createStore({\n  state: {\n    mensaje:\"esto es prueba\",\n    // pageShip:1,\n    pagesLoaded:[],\n    ships: [],\n    stopGettingShips: false,\n  },\n  mutations: {\n    loadShip (state, apiResponse){\n      state.ships = [...state.ships, ...apiResponse]\n      },\n    pagesLoaded (state, page){\n      state.pagesLoaded.push(page)\n      },\n    stopGettingShips (state){\n      state.stopGettingShips = true\n    },\n  },\n  getters: {\n    countShips (state){\n         return state.ships.length\n     },\n  },\n  actions: {\n    getShipList(context,page){\n      if (!context.state.stopGettingShips && !context.state.pagesLoaded.includes(page)){ \n      const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n      request.then( response => {\n              if (!response.ok) {\n                throw response.status\n                \n              } else{\n                return response.json()\n              }\n              })\n            .then(json => {\n              if (json.count>context.getters.countShips){\n              context.commit(\"loadShip\",json.results)\n              context.commit(\"pagesLoaded\",page)\n              }\n              if (context.getters.countShips>=json.count){\n                context.commit(\"stopGettingShips\")\n              }\n            })\n            .catch((error) => {\n              console.log('Ocurrió un error: ', error)\n              if (error==\"TypeError: Failed to fetch\"){\n                const request = fetch(`https://swapi.dev/api/starships/?page=${page}`);\n                request.fetch(`https://swapi.py4e.com/api/starships/?page=${page}`)\n                .then( response => {\n                   if (!response.ok) { \n                     throw response.status\n                   } else{\n                     console.log(\"Fetch alternativo\")\n                     return response.json()\n                   }\n                   })\n                 .then(json => {\n                    if (json.count>context.getters.countShips){\n                    context.commit(\"loadShip\",json.results)\n                    context.commit(\"pagesLoaded\",page)\n                    }\n                    if (context.getters.countShips>=json.count){\n                      context.commit(\"stopGettingShips\")\n                    }\n                               })\n                 .catch((error) => {\n                   console.log('Ocurrió un error: ', error)\n                   if (error==\"TypeError: Failed to fetch\"){\n                     console.log(\"Falló el fetch nuevamente\")\n                   }\n                 });\n               }\n            });\n          }\n          },\n  },\n  modules: {\n  }\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}